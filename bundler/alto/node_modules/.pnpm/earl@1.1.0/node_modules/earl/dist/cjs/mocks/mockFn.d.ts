import { MockFunction, MockFunctionOf } from './types/index.js';
/**
 * Creates a mock function conforming to a given signature. You can call methods
 * on the mock function to further customize its behavior.
 *
 * Without a default implementation and without any further configuration the
 * mock will throw an error when called.
 *
 * @param defaultImplementation - (optional) A default implementation to use
 *   when the mock is called.
 *
 * @example
 * ```ts
 * const mock1 = mockFn((a: number, b: string) => a + b.length)
 *
 * const mock2 = mockFn<(a: number, b: string) => number>()
 * const mock3 = mockFn<[number, string], number>()
 *
 * const mock4 = mockFn().returnsOnce(420).returns(69)
 * ```
 */
export declare function mockFn<F extends (...args: any) => any>(defaultImplementation?: F): MockFunctionOf<F>;
export declare function mockFn<A extends any[], R>(defaultImplementation?: (...args: A) => R): MockFunction<A, R>;
export declare function isMockFn(value: unknown): value is MockFunction<any[], any>;
//# sourceMappingURL=mockFn.d.ts.map
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.toHaveBeenExhausted = void 0;
const expect_js_1 = require("../../expect.js");
const utils_js_1 = require("./utils.js");
(0, expect_js_1.registerValidator)('toHaveBeenExhausted', toHaveBeenExhausted);
function toHaveBeenExhausted(control) {
    (0, utils_js_1.assertIsMock)(control);
    const remainingCalls = control.actual.getOneTimeOverridesLength();
    const remainingOverrides = control.actual.getParameterOverridesLength();
    let remaining = '';
    if (remainingCalls !== 0 && remainingOverrides === 0) {
        remaining = `${remainingCalls} calls remaining`;
    }
    else if (remainingCalls === 0 && remainingOverrides !== 0) {
        remaining = `${remainingOverrides} conditional calls remaining`;
    }
    else {
        remaining = `${remainingCalls} calls and ${remainingOverrides} conditional calls remaining`;
    }
    control.assert({
        success: control.actual.isExhausted(),
        reason: `The mock function was not exhausted, ${remaining}.`,
        negatedReason: `The mock function has been exhausted, but it was not expected to be.`,
    });
}
exports.toHaveBeenExhausted = toHaveBeenExhausted;
//# sourceMappingURL=toHaveBeenExhausted.js.map
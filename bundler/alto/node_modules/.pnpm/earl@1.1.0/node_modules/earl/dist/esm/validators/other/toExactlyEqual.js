import { registerValidator } from '../../expect.js';
import { formatCompact } from '../../format/index.js';
registerValidator('toExactlyEqual', toExactlyEqual);
export function toExactlyEqual(control, expected) {
    const actualInline = formatCompact(control.actual);
    const expectedInline = formatCompact(expected);
    control.assert({
        success: sameValueZero(control.actual, expected),
        reason: `The value ${actualInline} is not the exact same value as ${expectedInline}, but it was expected to be.`,
        negatedReason: `The value ${actualInline} is the exact same value as ${expectedInline}, but it was expected not to be.`,
        actual: control.actual,
        expected,
    });
}
function sameValueZero(x, y) {
    if (typeof x === 'number' && typeof y === 'number') {
        // x and y are equal (may be -0 and 0) or they are both NaN
        return x === y || (x !== x && y !== y);
    }
    return x === y;
}
//# sourceMappingURL=toExactlyEqual.js.map
import { Control } from '../../Control.js';
import { ZodSchema } from '../../matchers/custom/schema.js';
declare module '../../expect.js' {
    interface Validators<T> {
        /**
         * Asserts that the value conforms to the provided zod schema.
         *
         * If you want to match a nested value, use the matcher
         * `expect.schema(schema)` instead.
         *
         * @param schema - The zod schema to use.
         *
         * @example
         * ```ts
         * import * as z from 'zod'
         * const Pricing = z.object({
         *   price: z.number().positive(),
         *   currency: z.string().length(3),
         * })
         *
         * expect({
         *   price: 1299,
         *   currency: 'USD',
         * }).toMatchSchema(Pricing)
         *
         * expect({
         *   price: -1,
         *   currency: 'error',
         * }).not.toMatchSchema(Pricing)
         * ```
         */
        toMatchSchema(schema: ZodSchema): void;
    }
}
export declare function toMatchSchema(control: Control, expected: ZodSchema): void;
//# sourceMappingURL=toMatchSchema.d.ts.map
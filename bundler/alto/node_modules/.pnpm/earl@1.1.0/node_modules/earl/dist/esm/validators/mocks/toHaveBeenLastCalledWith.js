import { registerValidator } from '../../expect.js';
import { assertIsMock, compareArgs } from './utils.js';
registerValidator('toHaveBeenLastCalledWith', toHaveBeenLastCalledWith);
export function toHaveBeenLastCalledWith(control, ...expected) {
    assertIsMock(control);
    const lastCall = control.actual.calls.at(-1);
    if (lastCall === undefined) {
        return control.assert({
            success: false,
            reason: `The mock function was never called, but it was expected to have been called at least once.`,
            negatedReason: '',
        });
    }
    compareArgs(control, lastCall.args, expected);
}
//# sourceMappingURL=toHaveBeenLastCalledWith.js.map
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Control = void 0;
const index_js_1 = require("./errors/index.js");
const index_js_2 = require("./format/index.js");
class Control {
    constructor(options) {
        var _a;
        this.isNegated = false;
        this.assert = (result) => {
            if (this.isNegated === result.success) {
                throw new index_js_1.AssertionError({
                    message: result.success ? result.negatedReason : result.reason,
                    stack: this._location.stack,
                    ...formatActualAndExpected(result),
                });
            }
        };
        this.fail = (result) => {
            throw new index_js_1.AssertionError({
                message: result.reason,
                stack: this._location.stack,
                ...formatActualAndExpected(result),
            });
        };
        this.name = options.name;
        this.actual = options.actual;
        this.isNegated = (_a = options.isNegated) !== null && _a !== void 0 ? _a : false;
        this._location = index_js_1.AssertionError.getLocation(this.name);
    }
    get file() {
        return this._location.file;
    }
}
exports.Control = Control;
function formatActualAndExpected(result) {
    if (!('actual' in result && 'expected' in result)) {
        return {};
    }
    if (typeof result.actual === 'string' &&
        typeof result.expected === 'string') {
        return { actual: result.actual, expected: result.expected };
    }
    return {
        actual: (0, index_js_2.format)(result.actual, null),
        expected: (0, index_js_2.format)(result.expected, result.actual),
    };
}
//# sourceMappingURL=Control.js.map
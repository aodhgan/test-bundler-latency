"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.toInclude = void 0;
const expect_js_1 = require("../../expect.js");
const index_js_1 = require("../../format/index.js");
const includes_js_1 = require("../../matchers/objects/includes.js");
(0, expect_js_1.registerValidator)('toInclude', toInclude);
function toInclude(control, ...items) {
    const actualInline = (0, index_js_1.formatCompact)(control.actual);
    const itemsInline = formatItems(items);
    if (items.length === 0) {
        throw new TypeError('toInclude requires at least one argument');
    }
    control.assert({
        success: (0, includes_js_1.includes)(...items)(control.actual),
        reason: `The value ${actualInline} does not include ${itemsInline}, but it was expected to.`,
        negatedReason: `The value ${actualInline} includes ${itemsInline}, but it was expected not to.`,
    });
}
exports.toInclude = toInclude;
function formatItems(items) {
    const joined = languageJoin(items.map((x) => (0, index_js_1.formatCompact)(x, 20)));
    return joined.length > 50 ? `all of: ${items.length} items` : joined;
}
function languageJoin(items) {
    if (items.length === 1) {
        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
        return items[0];
    }
    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions
    return `all of: ${items.slice(0, -1).join(', ')} and ${items.at(-1)}`;
}
//# sourceMappingURL=toInclude.js.map
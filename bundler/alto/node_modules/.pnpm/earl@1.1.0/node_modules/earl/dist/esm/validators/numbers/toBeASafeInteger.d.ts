import { Control } from '../../Control.js';
declare module '../../expect.js' {
    interface Validators<T> {
        /**
         * Asserts that a value is an integer or a bigint and falls within the safe
         * range of values as defined by `Number.MIN_SAFE_INTEGER` and
         * `Number.MAX_SAFE_INTEGER`.
         *
         * If you want to match a nested value, use the matcher
         * `expect.safeInteger()` instead.
         *
         * @example
         * ```ts
         * expect(100).toBeASafeInteger()
         * expect(100n).toBeASafeInteger()
         *
         * expect(100.5).not.toBeASafeInteger()
         * expect(Number.MAX_SAFE_INTEGER * 2).not.toBeASafeInteger()
         * ```
         */
        toBeASafeInteger(this: Validators<number | bigint>): void;
    }
}
export declare function toBeASafeInteger(control: Control): void;
//# sourceMappingURL=toBeASafeInteger.d.ts.map
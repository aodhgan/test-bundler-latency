export interface ValidationResult {
    success: boolean;
    hint?: string;
    reason: string;
    negatedReason: string;
    actual?: unknown;
    expected?: unknown;
}
export interface ControlOptions {
    name: string;
    actual?: unknown;
    isNegated?: boolean;
}
export declare class Control {
    private readonly _location;
    readonly name: string;
    readonly actual: unknown;
    isNegated: boolean;
    constructor(options: ControlOptions);
    get file(): string | undefined;
    assert: (result: ValidationResult) => void;
    fail: (result: Omit<ValidationResult, 'success' | 'negatedReason'>) => never;
}
//# sourceMappingURL=Control.d.ts.map
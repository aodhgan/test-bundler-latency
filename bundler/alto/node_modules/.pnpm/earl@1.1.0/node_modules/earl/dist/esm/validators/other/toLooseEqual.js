import { registerValidator } from '../../expect.js';
import { LOOSE_FORMAT_OPTIONS } from '../../format/FormatOptions.js';
import { format, formatCompact } from '../../format/index.js';
import { isEqual, LOOSE_EQUALITY_OPTIONS } from '../../isEqual/index.js';
registerValidator('toLooseEqual', toLooseEqual);
export function toLooseEqual(control, expected) {
    const actualInline = formatCompact(control.actual);
    const expectedInline = formatCompact(expected);
    control.assert({
        success: isEqual(control.actual, expected, LOOSE_EQUALITY_OPTIONS),
        reason: `The value ${actualInline} is not loosely equal to ${expectedInline}, but it was expected to be loosely equal.`,
        negatedReason: `The value ${actualInline} is loosely equal to ${expectedInline}, but it was expected not to be loosely equal.`,
        actual: format(control.actual, null, LOOSE_FORMAT_OPTIONS),
        expected: format(expected, control.actual, LOOSE_FORMAT_OPTIONS),
    });
}
//# sourceMappingURL=toLooseEqual.js.map